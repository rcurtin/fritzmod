<?xml version="1.0" encoding="utf-8"?>
<GalaxyShapes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<GalaxyShape Name="GalaxyDisk" MinEmpires="2" MaxEmpires="16">
		<SymetryOptions>
			<SymetryOption PlayerNum="2"/>
			<SymetryOption PlayerNum="4"/>
			<SymetryOption PlayerNum="6"/>
			<SymetryOption PlayerNum="8"/>
		</SymetryOptions>
		<Script>
			<![CDATA[
var ArmNumber = Configuration.ArmNumber();
var EmpiresNumber = Configuration.EmpiresNumber();
var Population = Configuration.Population();
var angle = 360 / ArmNumber;
var hsize = Math.sqrt(Population) * 15 * ArmNumber / 8;
var arc = Arc(0, hsize, angle);
var arms = new Array();
for(var i = 0; i < ArmNumber; i++)
{
	arms[i] = Constellation();
	arms[i].GenerateStarSystems(arc, Population);
	arms[i].Translate(0.1 * hsize, 0.1 * hsize);
	arms[i].Rotate(angle * i);
	arms[i].GenerateWarps();
}
for(var i = 0; i < ArmNumber; i++)
{
	Connect(arms[i], arms[(i+1)%ArmNumber]);
}

var diff = ArmNumber / EmpiresNumber;
var EmpireID = 0;
for(var i = 0; EmpireID < EmpiresNumber; i+= diff)
{
	arms[Math.floor(i)%ArmNumber].GenerateHome(EmpireID);
	EmpireID++;
}
			]]>
		</Script>
		<GalaxyViewLayout Path="Prefabs/Environment/Galaxy/Galaxy_Disk_A" Weight="1"/>
		
		<Regions>
			<Region color="#FFFFFF" empirestart="0"/>
			<Region color="#FFFF00" empirestart="1"/>
			<!-- yellow -->
			<Region color="#00FFFF" empirestart="1"/>
			<!-- teal -->
			<Region color="#008080" empirestart="1"/>
			<!-- dark-teal -->
			<Region color="#FF00FF" empirestart="1"/>
			<!-- pink -->
			<Region color="#800080" empirestart="1"/>
			<!-- purple -->
			<Region color="#0000FF" empirestart="1"/>
			<!-- blue -->
			<Region color="#00FF00" empirestart="1"/>
			<!-- green -->
			<Region color="#FF0000" empirestart="1"/>
			<!-- red -->
		</Regions>
	</GalaxyShape>
	
	<GalaxyShape Name="GalaxyDiskC" MinEmpires="2" MaxEmpires="16">
		<SymetryOptions>
			<SymetryOption PlayerNum="2"/>
			<SymetryOption PlayerNum="4"/>
			<SymetryOption PlayerNum="8"/>
		</SymetryOptions>
		<Script>
			<![CDATA[
var ArmNumber = Configuration.ArmNumber();
var EmpiresNumber = Configuration.EmpiresNumber();
var Population = Configuration.Population();
var angle = 360 / ArmNumber;
var hsize = Math.sqrt(Population) * 15 * ArmNumber / 8;
var circle = Ring(0, 0.3 * hsize);
var arc = Arc(0.3 * hsize, hsize, angle);
var core = Constellation();
core.GenerateStarSystems(circle, Population / 2);
core.GenerateWarps();
var arms = new Array();
for(var i = 0; i < ArmNumber; i++)
{
	arms[i] = Constellation();
	arms[i].GenerateStarSystems(arc, Population);
	arms[i].Translate(0.1 * hsize, 0.1 * hsize);
	arms[i].Rotate(angle * i);
	arms[i].GenerateWarps();
}
for(var i = 0; i < ArmNumber; i++)
{
	Connect(core, arms[i]);
	Connect(arms[i], arms[(i+1)%ArmNumber]);
}

var diff = ArmNumber / EmpiresNumber;
var EmpireID = 0;
for(var i = 0; EmpireID < EmpiresNumber; i+= diff)
{
	arms[Math.floor(i)%ArmNumber].GenerateHome(EmpireID);
	EmpireID++;
}
			]]>
		</Script>
		<GalaxyViewLayout Path="Prefabs/Environment/Galaxy/Galaxy_Disk4_A" Weight="1"/>
		<GalaxyViewLayout Path="Prefabs/Environment/Galaxy/Galaxy_Disk4_D" Weight="1"/>
		<Regions>
			<Region color="#FFFFFF" empirestart="0"/>
			<Region color="#FFFF00" empirestart="1"/>
			<!-- yellow -->
			<Region color="#00FFFF" empirestart="1"/>
			<!-- teal -->
			<Region color="#008080" empirestart="1"/>
			<!-- dark-teal -->
			<Region color="#FF00FF" empirestart="1"/>
			<!-- pink -->
			<Region color="#800080" empirestart="1"/>
			<!-- purple -->
			<Region color="#0000FF" empirestart="1"/>
			<!-- blue -->
			<Region color="#00FF00" empirestart="1"/>
			<!-- green -->
			<Region color="#FF0000" empirestart="1"/>
			<!-- red -->
		</Regions>
	</GalaxyShape>
	
	<GalaxyShape Name="GalaxyDisk2" MinEmpires="2" MaxEmpires="16">
		<SymetryOptions>
			<SymetryOption PlayerNum="2"/>
			<SymetryOption PlayerNum="4"/>
			<SymetryOption PlayerNum="8"/>
		</SymetryOptions>
		<Script>
			<![CDATA[
var ArmNumber = Configuration.ArmNumber();
var EmpiresNumber = Configuration.EmpiresNumber();
var Population = Configuration.Population();
var angle = 360 / ArmNumber;
var hsize = Math.sqrt(Population) * 20 * ArmNumber / 8;
var circle = Ring(0, 0.2 * hsize);
var innerArc = Arc(0.2 * hsize, 0.6 * hsize, angle);
var outerArc = Arc(0.6 * hsize, hsize, angle);
var core = Constellation();
core.GenerateStarSystems(circle, Population / 2);
core.GenerateWarps();

var innerArms = new Array();
for(var i = 0; i < ArmNumber; i++)
{
	innerArms[i] = Constellation();
	innerArms[i].GenerateStarSystems(innerArc, Population * 0.8);
	innerArms[i].Translate(0.1 * hsize, 0.1 * hsize);
	innerArms[i].Rotate(angle * i);
	innerArms[i].GenerateWarps();
}

var outerArms = new Array();
for(var i = 0; i < ArmNumber; i++)
{
	outerArms[i] = Constellation();
	outerArms[i].GenerateStarSystems(outerArc, Population * 1.2);
	outerArms[i].Translate(0.2 * hsize, 0.2 * hsize);
	outerArms[i].Rotate(angle * i - angle / 2);
	outerArms[i].GenerateWarps();
}

for(var i = 0; i < ArmNumber; i++)
{
	Connect(core, innerArms[i]);
	Connect(innerArms[i], outerArms[i]);
	Connect(innerArms[i], outerArms[(i+1)%ArmNumber]);
}

var diff = ArmNumber / EmpiresNumber;
var EmpireID = 0;
for(var i = 0; EmpireID < EmpiresNumber; i+= diff)
{
	outerArms[Math.floor(i)%ArmNumber].GenerateHome(EmpireID);
	EmpireID++;
}
			]]>
		</Script>
		<GalaxyViewLayout Path="Prefabs/Environment/Galaxy/Galaxy_Disk4_A" Weight="1"/>
		<GalaxyViewLayout Path="Prefabs/Environment/Galaxy/Galaxy_Disk4_D" Weight="1"/>
		<Regions>
			<Region color="#FFFFFF" empirestart="0"/>
			<Region color="#FFFF00" empirestart="1"/>
			<!-- yellow -->
			<Region color="#00FFFF" empirestart="1"/>
			<!-- teal -->
			<Region color="#008080" empirestart="1"/>
			<!-- dark-teal -->
			<Region color="#FF00FF" empirestart="1"/>
			<!-- pink -->
			<Region color="#800080" empirestart="1"/>
			<!-- purple -->
			<Region color="#0000FF" empirestart="1"/>
			<!-- blue -->
			<Region color="#00FF00" empirestart="1"/>
			<!-- green -->
			<Region color="#FF0000" empirestart="1"/>
			<!-- red -->
		</Regions>
	</GalaxyShape>
	
	<GalaxyShape Name="GalaxySpiral" MinEmpires="2" MaxEmpires="16">
		<SymetryOptions>
			<SymetryOption PlayerNum="2"/>
			<SymetryOption PlayerNum="4"/>
			<SymetryOption PlayerNum="8"/>
		</SymetryOptions>
		<Script>
			<![CDATA[
var ArmNumber = Configuration.ArmNumber();
var EmpiresNumber = Configuration.EmpiresNumber();
var Population = Configuration.Population();
var angle = 360 / ArmNumber;
var ArmSizeMultiplier = Math.min(0.2, 1.2 / ArmNumber); // 0.15 * hsize fuer 8 arme
var hsize = Math.sqrt(Population) * 25 * ArmSizeMultiplier * 8 / 1.2;
var ArmSize = ArmSizeMultiplier * hsize;
var circle = Ring(0, 0.2 * hsize);
var arc = Arc(0.5 * hsize, hsize * 0.5 + ArmSize, 90);
var core = Constellation();
core.GenerateStarSystems(circle, Population * 0.8);
core.GenerateWarps();
var arms = new Array();
var i = 0;
for(var i = 0; i < ArmNumber; i++)
{
	arms[i] = Constellation();
	arms[i].GenerateStarSystems(arc, Population);
	arms[i].Translate(-0.5 * hsize - ArmSize / 2, 0.3 * hsize);
	arms[i].Rotate(angle * i);
	arms[i].GenerateWarps();
}

for(var i = 1; i < ArmNumber; i++)
{
	Connect(core, arms[i], [arms[(i+1)%ArmNumber],arms[(ArmNumber+i-1)%ArmNumber]]);
}
Connect(core, arms[0], [arms[1],arms[ArmNumber-1]]);

var diff = ArmNumber / EmpiresNumber;
var EmpireID = 0;
for(var i = 0; EmpireID < EmpiresNumber; i+= diff)
{
	arms[Math.floor(i)%ArmNumber].GenerateHome(EmpireID);
	EmpireID++;
}
			]]>
		</Script>
		<GalaxyViewLayout Path="Prefabs/Environment/Galaxy/Galaxy_Disk4_A" Weight="1"/>
		<GalaxyViewLayout Path="Prefabs/Environment/Galaxy/Galaxy_Disk4_D" Weight="1"/>
		<Regions>
			<Region color="#FFFFFF" empirestart="0"/>
			<Region color="#FFFF00" empirestart="1"/>
			<!-- yellow -->
			<Region color="#00FFFF" empirestart="1"/>
			<!-- teal -->
			<Region color="#008080" empirestart="1"/>
			<!-- dark-teal -->
			<Region color="#FF00FF" empirestart="1"/>
			<!-- pink -->
			<Region color="#800080" empirestart="1"/>
			<!-- purple -->
			<Region color="#0000FF" empirestart="1"/>
			<!-- blue -->
			<Region color="#00FF00" empirestart="1"/>
			<!-- green -->
			<Region color="#FF0000" empirestart="1"/>
			<!-- red -->
		</Regions>
	</GalaxyShape>
</GalaxyShapes>
